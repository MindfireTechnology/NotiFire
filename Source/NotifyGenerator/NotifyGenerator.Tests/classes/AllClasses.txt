using NotiFire.Abstractions;
using Notifire;

namespace Tester.Models.AllFields
{
	[Notify]
	public class Order
	{
		public int IdField;
		public decimal TotalField;
		public string CustomerNameField;
		public DateTime Created {get;set;}
		public int OrderId => IdField;
	}

	[Notify]
	public class User
	{
		public int _Id;
		public string _FirstName;
		public string _LastName;
		public string _Address;
		public string _City;
		public string _ZipCode;
		public string _Phone;
	}

	[Notify]
	public class Purchase
	{
		public int Id;
		public DateTime Created;
		public string Comment;
	}
}

namespace Tester.Models.AllFields.Exclude
{
	[Notify]
	public class Order
	{
		public int IdField;
		public decimal TotalField;

		[Exclude]
		public string CustomerNameField;

		public DateTime Created {get;set;}
		public int OrderId => IdField;
	}

	[Notify]
	public class User
	{
		public int _Id;
		public string _FirstName;
		public string _LastName;
		public string _Address;
		public string _City;
		public string _ZipCode;
		public string _Phone;
	}

	[Notify]
	public class Purchase
	{
		public int Id;
		public DateTime Created;
		public string Comment;
	}
}

namespace Tester.Models.SpecificFields
{
	public class Order
	{
		public int IdField;

		[Notify]
		public decimal TotalField;

		[Notify(PropertyName = "Customer")]
		public string CustomerNameField;

		public DateTime Created {get;set;}
		public int OrderId => IdField;
	}

	public class User
	{
		[Notify]
		public int _Id;
		[Notify]
		public string _FirstName;
		[Notify]
		public string _LastName;
		[Notify]
		public string _Address;
		[Notify]
		public string _City;
		[Notify]
		public string _ZipCode;
		[Notify]
		public string _Phone;
	}

	public class Purchase
	{
		public int Id;
		[Notify]
		public DateTime Created;
		[Notify]
		public string Comment;
	}
}

namespace Tester.Models.HasInterface
{
	using System.ComponentModel;

	public class Order : System.ComponentModel.INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		public int IdField;

		[Notify]
		public decimal TotalField;

		[Notify(PropertyName = "Customer")]
		public string CustomerNameField;

		public DateTime Created {get;set;}
		public int OrderId => IdField;
	}

	[Notify]
	public class User : System.ComponentModel.INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		public int _Id;
		public string _FirstName;
		public string _LastName;
		public string _Address;
		public string _City;
		public string _ZipCode;
		public string _Phone;
	}
}